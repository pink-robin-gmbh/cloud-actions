name: Create release candidate

on:
  workflow_call:
    inputs:
      version:
        description: "Version number (semver without prefix)"
        required: true
        type: string
      target_branch:
        description: "Name of target branch for release"
        default: main
        type: string

    secrets:
      cloud_github_pat:
        description: "GitHub PAT of CI user to access repos and trigger workflows"
        required: true

jobs:
  Prepare:
    runs-on: [self-hosted, fastlane]

    steps:
      -
        name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.cloud_github_pat }}
      -
        id: verify
        name: Verify release
        run: |
          if ! [[ "${{ inputs.version }}" =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))?$ ]]; then echo "::error::Given version does not conform to simple semantic version."; exit 1; fi
          RELEASE_BRANCH="release/v${{ inputs.version }}"
          if git show-branch remotes/origin/$RELEASE_BRANCH 2> /dev/null; then echo "::error::Release candidate for version ${{inputs.version}} already exists"; exit 1; fi
          echo "release_branch=$RELEASE_BRANCH" >> $GITHUB_OUTPUT
          echo "### ðŸš§ Create release candidate for version ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "| | Build info |" >> $GITHUB_STEP_SUMMARY
          echo "| :-- | :-- |" >> $GITHUB_STEP_SUMMARY
          echo "| Release branch | \`$RELEASE_BRANCH\` |" >> $GITHUB_STEP_SUMMARY
      -
        name: Create release branch ${{ steps.verify.outputs.release_branch }} and merge changes from target ${{ inputs.target_branch }}
        run: |
          git config --global user.email "cloud@wastebox.biz"
          git config --global user.name "Cloud 3.0 CI/CD"
          git branch ${{ steps.verify.outputs.release_branch }}
          git checkout ${{ steps.verify.outputs.release_branch }}
          git merge origin/${{ inputs.target_branch }} --commit
          git commit --allow-empty -m "ðŸŽ‰ Starting release candidate for version ${{ inputs.version }}" -m "Based of ${{ github.ref_name }} (targeting ${{ inputs.target_branch }} - has been automatically merged into release branch ${{ steps.verify.outputs.release_branch }})"
          git push -u origin ${{ steps.verify.outputs.release_branch }}
